// Generated by view binder compiler. Do not edit!
package com.proway.pokemonapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.proway.pokemonapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TypeButtonsLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView typeCardView1;

  @NonNull
  public final CardView typeCardView2;

  @NonNull
  public final ImageView typeImageView1;

  @NonNull
  public final ImageView typeImageView2;

  @NonNull
  public final TextView typeTextView1;

  @NonNull
  public final TextView typeTextView2;

  private TypeButtonsLayoutBinding(@NonNull ConstraintLayout rootView,
      @NonNull CardView typeCardView1, @NonNull CardView typeCardView2,
      @NonNull ImageView typeImageView1, @NonNull ImageView typeImageView2,
      @NonNull TextView typeTextView1, @NonNull TextView typeTextView2) {
    this.rootView = rootView;
    this.typeCardView1 = typeCardView1;
    this.typeCardView2 = typeCardView2;
    this.typeImageView1 = typeImageView1;
    this.typeImageView2 = typeImageView2;
    this.typeTextView1 = typeTextView1;
    this.typeTextView2 = typeTextView2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TypeButtonsLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TypeButtonsLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.type_buttons_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TypeButtonsLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.typeCardView1;
      CardView typeCardView1 = ViewBindings.findChildViewById(rootView, id);
      if (typeCardView1 == null) {
        break missingId;
      }

      id = R.id.typeCardView2;
      CardView typeCardView2 = ViewBindings.findChildViewById(rootView, id);
      if (typeCardView2 == null) {
        break missingId;
      }

      id = R.id.typeImageView1;
      ImageView typeImageView1 = ViewBindings.findChildViewById(rootView, id);
      if (typeImageView1 == null) {
        break missingId;
      }

      id = R.id.typeImageView2;
      ImageView typeImageView2 = ViewBindings.findChildViewById(rootView, id);
      if (typeImageView2 == null) {
        break missingId;
      }

      id = R.id.typeTextView1;
      TextView typeTextView1 = ViewBindings.findChildViewById(rootView, id);
      if (typeTextView1 == null) {
        break missingId;
      }

      id = R.id.typeTextView2;
      TextView typeTextView2 = ViewBindings.findChildViewById(rootView, id);
      if (typeTextView2 == null) {
        break missingId;
      }

      return new TypeButtonsLayoutBinding((ConstraintLayout) rootView, typeCardView1, typeCardView2,
          typeImageView1, typeImageView2, typeTextView1, typeTextView2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
